
@section css{


    <link href="~/Content/custom.css" rel="stylesheet" />
}

    <div class="row">
        <div class="col-md-2"></div>
        <div class="col-md-10">
            <div class="custom-card">
                <div class="row">
                    <div class="col-md-offset-0">
                        <h1><font color="blue">Salary Calculation</font></h1>
                    </div>
                </div>
                <br />
                <div class="row">


                    <table id="" class="salarycheck table table-bordered table-striped table-hover" width="100%">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Department</th>
                                <th>Position</th>
                                <th>Salary</th>
                                <th>Email Address</th>
                                <th>PhoneNumber</th>
                                <th>Bank Account</th>
                                <th></th>
                                <th>Calculate Salary</th>
                                <th>Detail</th>

                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>

            </div>
        </div>
        
    </div>

    <div class="row">
        <div class="col-md-2"></div>
        <div class="col-md-10">
            <div class="allowance custom-card" style="visibility:hidden">

                <div class="card-body">
                    <div class="row">
                        <div class="col-md-2">
                            <form action="" class="form-inline input-group dateform">
                                <div class="form-group">
                                    <label class="control-label">Choose Month and Year</label>

                                    <input type="date" class="form-control" placeholder="Choose Date" id="datesave" value="date" onchange="get_date(this.value);" required>
                                </div>


                            </form>
                        </div>
                        <div class="col-md-4"></div>

                        <div class="col-md-2">
                            <div class="form-group">
                                <div class="col-3">
                                    <label for="field-1" class="control-label">Total UnPaid Leave</label>
                                    <input type="text" class="unpaid form-control" name="unpaid" id=""
                                           value="0" readonly />
                                </div>
                            </div>
                        </div>

                        <div class="col-md-2">
                            <div class="form-group">
                                <label class="control-label">Total Amount Per Hour</label>
                                <input type="text" class="hour form-control" value="0" name="hour"
                                       id="" readonly />
                            </div>
                        </div>
                        <div class="col-md-2">
                            <label class="control-label">Calculate Total UnPaid Amount</label>
                            <button type="button" style="position:center" class="btn btn-info btn-sm" onClick="calculate_total_unpaid()">
                                Calculate
                            </button>
                        </div>
                    </div>
                </div>
                <br />

                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">

                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label class="control-label">ET/OT Amount</label>
                                <input type="text" class="ot form-control" value="0" name="ot"
                                       id="" @*readonly*@ />
                            </div>
                        </div>

                        <div class="col-md-2">
                            <div class="form-group">
                                <label class="control-label">Bonus Amount</label>
                                <input type="text" class="bonus form-control" value="0" name="bonus"
                                       id="" @*readonly*@ />
                            </div>
                        </div>
                        <div class="col-md-2">

                            <label class="control-label">Calculate Total Amount </label>
                            <button type="button" style="position:center" class="btn btn-info btn-sm" onClick="calculate_total()">
                                Calculate
                            </button>
                        </div>
                    </div>
                </div>
                <br />
                <hr />
                <div class="row">
                    <div class="col-xl-6 col-lg-6 col-md-6 col-sm-12 col-xs-12">
                        <h4>Allowances</h4>
                        @*<hr>*@
                        <div id="allowance">
                            <div class="row mt-2">
                                <div class="col-xl-5 col-lg-5 col-md-5 col-sm-12 col-xs-12">
                                    <input type="text" class="form-control" name="allowance_type[]"
                                           placeholder="Type" />
                                </div>

                                <div class="col-xl-5 col-lg-5 col-md-5 col-sm-12 col-xs-12">
                                    <input type="number" class="form-control" name="allowance_amount[]"
                                           placeholder="Amount"
                                           id="allowance_amount_1" />
                                </div>
                                <div class="col-xl-2 col-lg-2 col-md-2 col-sm-12 col-xs-12">
                                    <button type="button" class="btn btn-outline-success btn-sm" onClick="add_allowance()">
                                        +
                                    </button>
                                </div>
                            </div>
                        </div>

                        <div id="allowance_input">
                            <div class="row mt-2">
                                <div class="col-xl-5 col-lg-5 col-md-5 col-sm-12 col-xs-12">
                                    <input type="text" class="form-control" name="allowance_type[]"
                                           placeholder="Type" />
                                </div>

                                <div class="col-xl-5 col-lg-5 col-md-5 col-sm-12 col-xs-12">
                                    <input type="number" class="form-control" name="allowance_amount[]"
                                           placeholder="Amount"
                                           id="allowance_amount" />
                                </div>

                                <div class="col-xl-2 col-lg-2 col-md-2 col-sm-12 col-xs-12">
                                    <button type="button" class="btn btn-outline-danger"
                                            id="allowance_amount_delete" onclick="deleteAllowanceParentElement(this)">
                                        -
                                    </button>
                                </div>
                            </div>
                        </div>
                        <br /><br />
                        <div class="text-center mt-3">
                            <button type="button" class="btn btn-info btn-sm" onClick="calculate_total_allowance()">
                                Calculate Total Allowance
                            </button>
                        </div>
                    </div>

                    <div class="col-xl-6 col-lg-6 col-md-6 col-sm-12 col-xs-12">
                        <h4>Deductions</h4>
                        @*<hr>*@

                        <div id="deduction">
                            <div class="row mt-2">
                                <div class="col-xl-5 col-lg-5 col-md-5 col-sm-12 col-xs-12">
                                    <input type="text" class="form-control" name="deduction_type[]"
                                           placeholder="Type" />
                                </div>

                                <div class="col-xl-5 col-lg-5 col-md-5 col-sm-12 col-xs-12">
                                    <input type="number" class="form-control" name="deduction_amount[]"
                                           placeholder="Amount"
                                           id="deduction_amount_1" />
                                </div>
                                <div class="col-xl-2 col-lg-2 col-md-2 col-sm-12 col-xs-12">
                                    <button type="button" class="btn btn-outline-success btn-sm" onClick="add_deduction()">
                                        +
                                    </button>
                                </div>
                            </div>
                        </div>

                        <div id="deduction_input">
                            <div class="row mt-2">
                                <div class="col-xl-5 col-lg-5 col-md-5 col-sm-12 col-xs-12">
                                    <input type="text" class="form-control" name="deduction_type[]"
                                           placeholder="Type" />
                                </div>

                                <div class="col-xl-5 col-lg-5 col-md-5 col-sm-12 col-xs-12">
                                    <input type="number" class="form-control" name="deduction_amount[]"
                                           placeholder="Amount"
                                           id="deduction_amount" />
                                </div>

                                <div class="col-xl-2 col-lg-2 col-md-2 col-sm-12 col-xs-12">
                                    <button type="button" class="btn btn-outline-danger"
                                            id="deduction_amount_delete" onclick="deleteDeductionParentElement(this)">
                                        -
                                    </button>
                                </div>
                            </div>
                        </div>


                        <br /><br />
                        <div class="text-center mt-3">
                            <button type="button" class="btn btn-info btn-sm" onClick="calculate_total_deduction()">
                                Calculate Total Deduction
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-2"></div>
        <div class="col-md-10">
            <div class="salary custom-card" style="visibility:hidden">
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-2 col-lg-2"></div>
                        <div class="col-xs-12 col-sm-12 col-md-8 col-lg-8">
                            @using (Html.BeginForm("CreatePaySlip", "HumanResource", FormMethod.Post, new { @id = "SOFORM" }))
                            {
                                @Html.AntiForgeryToken()
                                // <form action="@Url.Action("CreatePaySlip", "HumanResource")" method="post">
                                <h3 class="header-title mb-3">Summary</h3>
                                <div class="form-group">
                                    <div class="col-12">
                                        <label for="field-1" class="control-label">Basic</label>
                                        <input type="text" class="basic form-control" name="basic" id=""
                                               value="0" readonly />
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-12">
                                        <label class="control-label">Total Allowance</label>
                                        <input type="text" class="form-control" value="0" name="totalallownace"
                                               id="total_allowance" @*readonly*@ />
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-12">
                                        <label class="control-label">Total Deduction</label>
                                        <input type="text" class="form-control" value="0" name="total_deduction"
                                               id="total_deduction" @*readonly*@ />
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-12">
                                        <label class="control-label">Tax</label>
                                        <input type="text" class="form-control" value="0" name="tax"
                                               id="tax" @*readonly*@ />
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-12">
                                        <label for="field-1" class="control-label">Net Salary</label>
                                        <input type="text" class="form-control" name="net_salary"
                                               id="net_salary" value="0" @*readonly*@ />
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-12">
                                        <label for="field-2">Status</label>
                                        <select name="status" class="form-control selectboxit" id="status">
                                            <option value="Paid">Paid</option>
                                            <option value="Unpaid">Unpaid</option>
                                        </select>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-4"></div>
                                    <div class="col-md-8">
                                        <button type="submit" class="btn btn-info float-right">Create Payslip</button>
                                    </div>
                                </div>
                                <input type="hidden" name="ot" value="0" class="ot" id="hot" />
                                <input type="hidden" name="bonus" value="0" class="bonus" id="hbonus" />
                                <input type="hidden" name="EmpId" value="0" id="EmpId" />
                                <input type="hidden" name="salaryid" value="0" id="salaryid" />
                                <input type="hidden" name="unpaid" value="0" class="unpaid" />
                                <input type="hidden" name="hour" value="0" class="hour" />
                                <input type="hidden" name="date" value="0" id="datesave" />
                                <input type="hidden" name="Name" value="0" id="name">
                                <input type="hidden" name="Bankacc" value="0" class="bank" />

                                //   </form>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
<div class="modal fade" id="detailpaymentMD" tabindex="-1" role="dialog" aria-labelledby="detailMD-label" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header" style="background-color:#0000ff">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="detailMD-label" style="color:#fff">Detail Payment</h4>


            </div>
            <br /><br />


            <div class="modal-body">

                <div class="row">
                    <div class="col-md-12">
                        <table id="detailpayment" class="table table-bordered table-striped table-hover" width="100%">
                            <thead>
                                <tr>
                                    <th>ID</th>
                                    <th>Name</th>
                                    <th>Date</th>
                                    <th>Total Allowance</th>
                                    <th>Total Deductions</th>
                                    <th>Basic Salary</th>
                                    <th>Net Salary</th>
                                    <th>Status</th>

                                    <th>Options</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>

                    </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary btnmain" style="background-color:blue" data-dismiss="modal">Close</button>
                </div>
            </div>

        </div>

    </div>
</div>


@section scripts{
    <script src="~/themekit/Moment.min.js"></script>
    <script src="~/themekit/bootstrap-datetimepicker.min.js"></script>
    <script src="https://code.highcharts.com/highcharts.js"></script>
    <script src="https://code.highcharts.com/modules/data.js"></script>
    <script src="https://code.highcharts.com/modules/drilldown.js"></script>

    <link href="https://cdn.datatables.net/1.10.15/css/dataTables.bootstrap.min.css" rel="stylesheet" />
    <link href="https://cdn.datatables.net/responsive/2.1.1/css/responsive.bootstrap.min.css" rel="stylesheet" />

    <script src="https://cdn.datatables.net/1.10.15/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.15/js/dataTables.bootstrap4.min.js "></script>
    <script type="text/javascript">
                var tax=0;
        var table;
        var salaryid;
        var EmpId;
        var EmpIds;
        var Salary;
        var Name;
        var Bankacc;
        var detailnum;
        var detailpayment;
                var Position;
                var allowance_count = 1;
        var deduction_count = 1;
        var total_allowance = 0;
                var total_deduction = 0;
                var deleted_allowances = [];
                var deleted_deductions = [];
        //var totalallowance = 0;

       // var totaldeduction = 0;
        var netsalary = 0;
        var status = "Paid";
                $(function () {
                    SalaryCheck();
                    //$('.datepicker').datetimepicker({
                    //    format: 'DD-MMM-YYYY'


                    //});
                });

                function SalaryCheck() {
                    var SetData = $(".salarycheck tbody").empty();
                    if ($.fn.DataTable.isDataTable('.salarycheck')) {

                        $('.salarycheck').DataTable().clear().destroy();

                    }

                    $('.salarycheck').DataTable({

                        "ajax": {
                            "url": "/HumanResource/SalaryCheck",
                            "type": "GET",
                            "datatype": "json"
                        },
                        "columns": [

                            { "data": "Name" },
                            { "data": "Department" },
                            { "data": "Position" },
                            { "data": "Salary" },
                            { "data": "EmailAddress" },
                            { "data": "PhoneNumber" },
                            { "data": "Bankacc" },
                            { className: "hide", data: 'EmpId' },
                            {

                                "mRender": function (data, type, row) {
                                    return '<a href="#" class="editor_remove" onclick="CalculateSalary(' + row.EmpId + ', \'' + row.Salary + '\' , \'' + row.Name + ' \', \'' + row.Bankacc + '\')">Calculate</a>'


                                }
                            }, {

                                "mRender": function (data, type, row) {
                                    return '<a href="#" class="editor_remove" onclick="DetailSalary(' + row.EmpId + ')">Detail</a>'


                                }
                            }

                        ]


                    });
                }

        function CalculatePayment(EmpId, Salary, Name, Bankacc, totalallowance, totaldeduction,netsalary,status,salaryid,bonus,ot,date,unpaid,hour) {

            EmpIds = EmpId;
            Salary = Salary;
            Name = Name;
            salaryid = salaryid;
            Bankacc = Bankacc;

            netsalary = netsalary;
             total_allowance = totalallowance;
             total_deduction = totaldeduction;
             status = status;
            //alert(salaryid);
            //alert(total_allowance);
            //alert(totaldeduction);
            //alert(bonus);
            //alert(ot);
           // alert(date);
            //alert(status);
            var today = moment(date).format('YYYY-MM-DD');
            
         //   date = moment(date).format("DD-MM-YYYY");
          //  alert(date);
            document.getElementsByClassName('salary')[0].style.visibility = 'visible';

            document.getElementsByClassName('allowance')[0].style.visibility = 'visible';
            $('.basic').val(Salary);
            $('#EmpId').val(EmpId);
            $('#salaryid').val(salaryid);
            $('#name').val(Name);
            $('#bank').val(Bankacc);
            $('#allowance_amount_1').val(total_allowance);
            $('#deduction_amount_1').val(total_deduction);
            $('#total_allowance').val(total_allowance);
           
             $('#total_deduction').val(total_deduction);
            $('#status').val(status);
            $('.ot').val(ot);
            $('.bonus').val(bonus);
            $(".unpaid").val(unpaid);
            $(".hour").val(hour);
            $('#datesave').val(today);
            if (Salary >= 450000) {
                tax = (Salary * 4) / 100;
                $('#tax').val(tax)
            }
            else {
                $('#tax').val(0)
            }
            var net = Salary - tax;
            if (netsalary == 0) {
               $('#net_salary').val(net);
            }
            else {
             $('#net_salary').val(netsalary);
            }

            $('#detailpaymentMD').modal('hide');
        }

                function CalculateSalary(EmpId, Salary,Name,Bankacc) {
                 //   date = moment(date).format("YYYY-MM-DD");
                    EmpIds = EmpId;
                    Salary = Salary;
                    Name = Name;
                    salaryid = salaryid;
                    Bankacc = Bankacc;
                    status = status;
                    //alert(EmpId);
                    //alert(salaryid);
                   // alert(total_allowance);
                    //alert(total_allowance);
                    //alert(status);
                    document.getElementsByClassName('salary')[0].style.visibility = 'visible';

                    document.getElementsByClassName('allowance')[0].style.visibility = 'visible';
                    $('.basic').val(Salary);
                    $('#EmpId').val(EmpId);
                    $('#salaryid').val(salaryid);
                    $('#name').val(Name);
                    $('#bank').val(Bankacc);
                    $('#allowance_amount_1').val(0);
                    $('#deduction_amount_1').val(0);
                    $('#total_allowance').val(0);
                    $('#total_deduction').val(0);
                    $('#status').val(null);
                    $('.ot').val(0);
                    $('.bonus').val(0);
                    $(".unpaid").val(0);
                    $(".hour").val(0);
                    $('#net_salary').val(0);
                    //$('#total_allowance').val(total_allowance);
                  //  $('#total_deduction').val(total_deduction);
                    $('#status').val(status);

                    if (Salary >= 450000) {
                        tax = (Salary * 4) / 100;
                        $('#tax').val(tax)
                    }
                    else {
                        $('#tax').val(0)
                    }
                    var net = Salary - tax;
                    if (netsalary == 0) {
                        $('#net_salary').val(net);
                    }
                    else {
                        $('#net_salary').val(netsalary);
                    }


                    $('#detailpaymentMD').modal('hide');
        }


        function DetailSalary(EmpId) {

            var SetData = $("#detailpayment tbody").empty()
            if ($.fn.DataTable.isDataTable('#detailpayment')) {

                $('#detailpayment').DataTable().clear().destroy();

            }
           // alert(EmpId);
              $.ajax({
                cache: false,
                url: "@Url.Action("Payslip", "HumanResource")",
                  data: { EmpId: EmpId},
                  success: function (result) {
                      detailpayment = jQuery.parseJSON(JSON.stringify(result));
                      // console.log(detailpayment)
                      detailnum = result.EmpId.length;
                     // alert(detailnum);
                      $('#detailpaymentMD').modal('show');
                    //  alert(result[0].EmpId);
                      for (i = 0; i < detailnum; i++) {

                          Data = "<tr>" +
                              "<td>" + detailpayment.EmpId[i] + "</td>" +


                              "<td>" + detailpayment.Name[i] + "</td>" +
                              "<td>" + detailpayment.date[i] + "</td>" +
                              "<td>" + detailpayment.totalallownace[i] + "</td>" +
                              "<td>" + detailpayment.total_deduction[i] + "</td>" +
                              "<td>" + detailpayment.basic[i] + "</td>" +
                              "<td>" + detailpayment.net_salary[i] + "</td>" +
                              "<td>" + detailpayment.status[i] + "</td>" +

                              "<td>" + '<a href="#" class="editor_remove" onclick="CalculatePayment(' + detailpayment.EmpId[i] + ', \'' + detailpayment.basic[i] + '\' , \'' + detailpayment.Name[i] + ' \', \'' + detailpayment.Bankacc[i] + '\', \'' + detailpayment.totalallownace[i] + '\', \'' + detailpayment.total_deduction[i] + '\', \'' + detailpayment.net_salary[i] + '\', \'' + detailpayment.status[i] + '\', \'' + detailpayment.salaryid[i] + '\', \'' + detailpayment.bonus[i] + '\', \'' + detailpayment.ot[i] + '\', \'' + detailpayment.date[i] + '\', \'' + detailpayment.unpaid[i] + '\', \'' + detailpayment.hour[i] + '\')">Edit</a>' + "</td>" +
                            "</tr>";

                        SetData.append(Data);
                    }
                      table = $("#detailpayment").DataTable({
                        "ordering": true,

                        retrieve: true,
                        destroy: true,
                        paging: true,
                        searching: true,
                        info: true,

                      });

                },
                complete: function () {

                }
            });
        }


                $(document).ready(function () {
                    // SelectBoxIt Dropdown replacement
                    if ($.isFunction($.fn.selectBoxIt)) {
                        $("select.selectboxit").each(function (i, el) {
                            var $this = $(el),
                                opts = {
                                    showFirstOption: attrDefault($this, 'first-option', true),
                                    'native': attrDefault($this, 'native', false),
                                    defaultText: attrDefault($this, 'text', ''),
                                };

                            $this.addClass('visible');
                            $this.selectBoxIt(opts);
                        });
                    }

                });


                $('#allowance_input').hide();

                // CREATING BLANK ALLOWANCE INPUT
                var blank_allowance = '';
                $(document).ready(function () {
                    blank_allowance = $('#allowance_input').html();
                });

                function add_allowance() {
                    allowance_count++;
                    $("#allowance").append(blank_allowance);
                    $('#allowance_amount').attr('id', 'allowance_amount_' + allowance_count);
                    $('#allowance_amount_delete').attr('id', 'allowance_amount_delete_' + allowance_count);
                    $('#allowance_amount_delete_' + allowance_count).attr('onclick', 'deleteAllowanceParentElement(this, ' + allowance_count + ')');
                }

                // REMOVING ALLOWANCE INPUT
                function deleteAllowanceParentElement(n, allowance_count) {
                    n.parentNode.parentNode.parentNode.removeChild(n.parentNode.parentNode);
                    deleted_allowances.push(allowance_count);
                }

        function calculate_total_allowance() {
            total_allowance = 0;
            var amount;
                    for (i = 1; i <= allowance_count; i++) {
                        if (jQuery.inArray(i, deleted_allowances) == -1) {
                            amount = $('#allowance_amount_' + i).val();

                            if (amount != 0) {
                                amount = parseInt(amount);
                                total_allowance = amount + parseInt(total_allowance);
                                //$('#total_allowance').attr('value', total_allowance);
                                $('#total_allowance').val(total_allowance);
                            }
                        }
            }
            //alert(total_allowance);
            net_salary = parseInt($('.ot').val()) + parseInt($('.bonus').val()) + parseInt($('.basic').val()) + parseInt($('#total_allowance').val()) - (parseInt($('#total_deduction').val()) + parseInt($('#tax').val()) + (parseInt($('.unpaid').val()) * parseInt($('.hour').val()) * 8));
            $('#net_salary').val(net_salary);
                    //$('#net_salary').attr('value', net_salary);
                    total_allowance = 0;
                }

                $('#deduction_input').hide();

                // CREATING BLANK DEDUCTION INPUT
                var blank_deduction = '';
                $(document).ready(function () {
                    blank_deduction = $('#deduction_input').html();
                });

                function add_deduction() {
                    deduction_count++;
                    $("#deduction").append(blank_deduction);
                    $('#deduction_amount').attr('id', 'deduction_amount_' + deduction_count);
                    $('#deduction_amount_delete').attr('id', 'deduction_amount_delete_' + deduction_count);
                    $('#deduction_amount_delete_' + deduction_count).attr('onclick', 'deleteDeductionParentElement(this, ' + deduction_count + ')');
                }

                // REMOVING DEDUCTION INPUT
                function deleteDeductionParentElement(n, deduction_count) {
                    n.parentNode.parentNode.parentNode.removeChild(n.parentNode.parentNode);
                    deleted_deductions.push(deduction_count);
                }

        function calculate_total_deduction() {
            total_deduction = 0;
                    var amount;
                    for (i = 1; i <= deduction_count; i++) {
                        if (jQuery.inArray(i, deleted_deductions) == -1) {
                            amount = $('#deduction_amount_' + i).val();

                            if (amount != '') {
                                amount = parseInt(amount);
                                total_deduction = amount + parseInt(total_deduction);
                                $('#total_deduction').val(total_deduction);
                                //$('#total_deduction').attr('value', total_deduction);
                            }
                        }
                    }
                    net_salary = parseInt($('.ot').val()) + parseInt($('.bonus').val()) +parseInt($('.basic').val()) + parseInt($('#total_allowance').val()) - (parseInt($('#total_deduction').val()) + parseInt($('#tax').val()) + (parseInt($('.unpaid').val()) * parseInt($('.hour').val()) * 8));
                    $('#net_salary').val(net_salary);
                   
                }
        function calculate_total_unpaid() {
            var amount;

            net_salary = parseInt($('.ot').val()) + parseInt($('.bonus').val()) +parseInt($('.basic').val()) + parseInt($('#total_allowance').val()) - (parseInt($('#total_deduction').val()) + parseInt($('#tax').val()) + (parseInt($('.unpaid').val()) * parseInt($('.hour').val())*8));
            $('#net_salary').val(net_salary);
            //total_deduction = 0;
        }
        function calculate_total() {
            //alert("a");
            net_salary = parseInt($('.ot').val()) +parseInt($('.bonus').val()) +parseInt($('.basic').val()) + parseInt($('#total_allowance').val()) - (parseInt($('#total_deduction').val()) + parseInt($('#tax').val()) + (parseInt($('.unpaid').val()) * parseInt($('.hour').val()) * 8));
            $('#net_salary').val(net_salary);
            //total_deduction = 0;
            $('#hot').val($('.ot').val());
            $('#hbonus').val($('.bonus').val());
        }

        function get_date(date) {
           // alert(date);
           // alert(EmpIds);
            var id = EmpIds;
            $.ajax({
                cache: false,
                url: "@Url.Action("CalculateWeekend", "HumanResource")",
                data: { date: date, EmpId: id},
                success: function (result) {
                    var weekend = result;
                    $.ajax({
                        cache: false,
                        url: "@Url.Action("FindByDate", "HumanResource")",
                        data: { date: date, EmpId: id },
                        type: "GET",
                        datatype: "json",
                        success: function (response) {
                            var result = JSON.stringify(response);
                            $(".unpaid").val(result[8]);
                            $(".hour").val(weekend);
                            $("#datesave").val(date);
                        }
                    });

                }
            });

        }
    </script>
}
